import { ChangeDetectionStrategy, Component, ElementRef, Input } from '@angular/core';
import { InlineSVGDirective } from './inline-svg.directive';
import { InlineSVGService } from './inline-svg.service';
var InlineSVGComponent = (function () {
    function InlineSVGComponent(_inlineSVGService, el) {
        this._inlineSVGService = _inlineSVGService;
        this._el = el;
    }
    InlineSVGComponent.prototype.ngAfterViewInit = function () {
        this._updateContent();
    };
    InlineSVGComponent.prototype.ngOnChanges = function (changes) {
        if (changes['content']) {
            this._updateContent();
        }
    };
    InlineSVGComponent.prototype._updateContent = function () {
        this._inlineSVGService.insertEl(this.context, this._el.nativeElement, this.content, this.replaceContents, this.prepend);
    };
    InlineSVGComponent.decorators = [
        { type: Component, args: [{
                    selector: 'inline-svg',
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    InlineSVGComponent.ctorParameters = function () { return [
        { type: InlineSVGService },
        { type: ElementRef }
    ]; };
    InlineSVGComponent.propDecorators = {
        context: [{ type: Input }],
        content: [{ type: Input }],
        replaceContents: [{ type: Input }],
        prepend: [{ type: Input }]
    };
    return InlineSVGComponent;
}());
export { InlineSVGComponent };
